{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\task-manager\\\\Frontend\\\\src\\\\components\\\\TaskManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './TaskManager.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:3000';\nfunction TaskManager({\n  token,\n  isAdmin\n}) {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [status, setStatus] = useState('pending');\n  const [file, setFile] = useState(null);\n  const [isFormVisible, setIsFormVisible] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [filter, setFilter] = useState('all');\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const fetchTasks = async () => {\n    setIsLoading(true);\n    try {\n      const res = await axios.get(`${API_URL}/tasks`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setTasks(res.data);\n    } catch (err) {\n      console.error('Error fetching tasks:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleCreate = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    try {\n      await axios.post(`${API_URL}/tasks`, {\n        title,\n        description,\n        status\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setTitle('');\n      setDescription('');\n      setStatus('pending');\n      setIsFormVisible(false);\n      fetchTasks();\n    } catch (err) {\n      console.error('Error creating task:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleUpdate = async (id, currentStatus) => {\n    const newStatus = currentStatus === 'pending' ? 'completed' : 'pending';\n    setIsLoading(true);\n    try {\n      await axios.put(`${API_URL}/tasks/${id}`, {\n        status: newStatus\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      fetchTasks();\n    } catch (err) {\n      console.error('Error updating task:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleDelete = async id => {\n    if (!window.confirm('Are you sure you want to delete this task?')) return;\n    setIsLoading(true);\n    try {\n      await axios.delete(`${API_URL}/tasks/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      fetchTasks();\n    } catch (err) {\n      console.error('Error deleting task:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleUpload = async e => {\n    e.preventDefault();\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('file', file);\n    setIsLoading(true);\n    try {\n      await axios.post(`${API_URL}/tasks/upload`, formData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setFile(null);\n      const fileInput = document.getElementById('file-upload');\n      if (fileInput) fileInput.value = '';\n      alert('File uploaded successfully');\n    } catch (err) {\n      console.error('Error uploading file:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleExport = async () => {\n    setIsLoading(true);\n    try {\n      const res = await axios.get(`${API_URL}/tasks/export`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        responseType: 'blob'\n      });\n      const url = window.URL.createObjectURL(new Blob([res.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'tasks.csv');\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } catch (err) {\n      console.error('Error exporting tasks:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleDownloadLogs = async () => {\n    setIsLoading(true);\n    try {\n      const res = await axios.get(`${API_URL}/tasks/logs`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        responseType: 'blob'\n      });\n      const url = window.URL.createObjectURL(new Blob([res.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'logs.txt');\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } catch (err) {\n      console.error('Error downloading logs:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'all') return true;\n    return task.status === filter;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-manager-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-manager-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Task Manager PRO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"primary-button\",\n          onClick: () => setIsFormVisible(!isFormVisible),\n          children: isFormVisible ? 'Cancel' : '+ New Task'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"secondary-button\",\n          onClick: handleExport,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"icon-download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), \" Export CSV\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"secondary-button\",\n          onClick: handleDownloadLogs,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"icon-logs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), \" Download Logs\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), isFormVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleCreate,\n        className: \"task-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"title\",\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            placeholder: \"Task title\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"description\",\n            value: description,\n            onChange: e => setDescription(e.target.value),\n            placeholder: \"Task description\",\n            rows: \"3\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"status\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"status\",\n            value: status,\n            onChange: e => setStatus(e.target.value),\n            className: \"status-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"pending\",\n              children: \"Pending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"completed\",\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"primary-button\",\n            disabled: isLoading,\n            children: isLoading ? 'Saving...' : 'Save Task'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Import Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUpload,\n        className: \"upload-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"file-upload\",\n            onChange: e => setFile(e.target.files[0]),\n            className: \"file-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file-upload\",\n            className: \"file-label\",\n            children: file ? file.name : 'Choose file'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"secondary-button\",\n          disabled: !file || isLoading,\n          children: isLoading ? 'Uploading...' : 'Upload'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `filter-button ${filter === 'all' ? 'active' : ''}`,\n        onClick: () => setFilter('all'),\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `filter-button ${filter === 'pending' ? 'active' : ''}`,\n        onClick: () => setFilter('pending'),\n        children: \"Pending\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `filter-button ${filter === 'completed' ? 'active' : ''}`,\n        onClick: () => setFilter('completed'),\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), isLoading && !filteredTasks.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading tasks...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-list\",\n      children: filteredTasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No tasks found. Create a new task to get started!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 13\n      }, this) : filteredTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `task-card ${task.status}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"task-title\",\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"task-description\",\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `task-status ${task.status}`,\n            children: task.status.charAt(0).toUpperCase() + task.status.slice(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleUpdate(task.id, task.status),\n            className: \"action-button toggle\",\n            title: task.status === 'pending' ? 'Mark as Completed' : 'Mark as Pending',\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: task.status === 'pending' ? 'icon-check' : 'icon-refresh'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(task.id),\n            className: \"action-button delete\",\n            title: \"Delete Task\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"icon-trash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 17\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskManager, \"mYpcoBN5/VZI+00YF2s2TwWdaCw=\");\n_c = TaskManager;\nexport default TaskManager;\nvar _c;\n$RefreshReg$(_c, \"TaskManager\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","API_URL","TaskManager","token","isAdmin","_s","tasks","setTasks","title","setTitle","description","setDescription","status","setStatus","file","setFile","isFormVisible","setIsFormVisible","isLoading","setIsLoading","filter","setFilter","fetchTasks","res","get","headers","Authorization","data","err","console","error","handleCreate","e","preventDefault","post","handleUpdate","id","currentStatus","newStatus","put","handleDelete","window","confirm","delete","handleUpload","formData","FormData","append","fileInput","document","getElementById","value","alert","handleExport","responseType","url","URL","createObjectURL","Blob","link","createElement","href","setAttribute","body","appendChild","click","removeChild","handleDownloadLogs","filteredTasks","task","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","htmlFor","onChange","target","placeholder","required","rows","type","disabled","files","name","length","map","charAt","toUpperCase","slice","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/task-manager/Frontend/src/components/TaskManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './TaskManager.css';\r\n\r\nconst API_URL = 'http://localhost:3000';\r\n\r\nfunction TaskManager({ token, isAdmin }) {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [status, setStatus] = useState('pending');\r\n  const [file, setFile] = useState(null);\r\n  const [isFormVisible, setIsFormVisible] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [filter, setFilter] = useState('all');\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const fetchTasks = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const res = await axios.get(`${API_URL}/tasks`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      setTasks(res.data);\r\n    } catch (err) {\r\n      console.error('Error fetching tasks:', err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCreate = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    try {\r\n      await axios.post(\r\n        `${API_URL}/tasks`,\r\n        { title, description, status },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setTitle('');\r\n      setDescription('');\r\n      setStatus('pending');\r\n      setIsFormVisible(false);\r\n      fetchTasks();\r\n    } catch (err) {\r\n      console.error('Error creating task:', err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleUpdate = async (id, currentStatus) => {\r\n    const newStatus = currentStatus === 'pending' ? 'completed' : 'pending';\r\n    setIsLoading(true);\r\n    try {\r\n      await axios.put(\r\n        `${API_URL}/tasks/${id}`,\r\n        { status: newStatus },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      fetchTasks();\r\n    } catch (err) {\r\n      console.error('Error updating task:', err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm('Are you sure you want to delete this task?')) return;\r\n    setIsLoading(true);\r\n    try {\r\n      await axios.delete(`${API_URL}/tasks/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      fetchTasks();\r\n    } catch (err) {\r\n      console.error('Error deleting task:', err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleUpload = async (e) => {\r\n    e.preventDefault();\r\n    if (!file) return;\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    setIsLoading(true);\r\n    try {\r\n      await axios.post(`${API_URL}/tasks/upload`, formData, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      setFile(null);\r\n      const fileInput = document.getElementById('file-upload');\r\n      if (fileInput) fileInput.value = '';\r\n      alert('File uploaded successfully');\r\n    } catch (err) {\r\n      console.error('Error uploading file:', err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleExport = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const res = await axios.get(`${API_URL}/tasks/export`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n        responseType: 'blob',\r\n      });\r\n      const url = window.URL.createObjectURL(new Blob([res.data]));\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', 'tasks.csv');\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } catch (err) {\r\n      console.error('Error exporting tasks:', err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDownloadLogs = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const res = await axios.get(`${API_URL}/tasks/logs`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n        responseType: 'blob',\r\n      });\r\n      const url = window.URL.createObjectURL(new Blob([res.data]));\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', 'logs.txt');\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } catch (err) {\r\n      console.error('Error downloading logs:', err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const filteredTasks = tasks.filter(task => {\r\n    if (filter === 'all') return true;\r\n    return task.status === filter;\r\n  });\r\n\r\n  return (\r\n    <div className=\"task-manager-container\">\r\n      <div className=\"task-manager-header\">\r\n        <h1>Task Manager PRO</h1>\r\n        <div className=\"task-actions\">\r\n          <button className=\"primary-button\" onClick={() => setIsFormVisible(!isFormVisible)}>\r\n            {isFormVisible ? 'Cancel' : '+ New Task'}\r\n          </button>\r\n          <button className=\"secondary-button\" onClick={handleExport}>\r\n            <i className=\"icon-download\"></i> Export CSV\r\n          </button>\r\n          {isAdmin && (\r\n            <button className=\"secondary-button\" onClick={handleDownloadLogs}>\r\n              <i className=\"icon-logs\"></i> Download Logs\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {isFormVisible && (\r\n        <div className=\"task-form-container\">\r\n          <h2>Create New Task</h2>\r\n          <form onSubmit={handleCreate} className=\"task-form\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"title\">Title</label>\r\n              <input\r\n                id=\"title\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                placeholder=\"Task title\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Description</label>\r\n              <textarea\r\n                id=\"description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                placeholder=\"Task description\"\r\n                rows=\"3\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"status\">Status</label>\r\n              <select \r\n                id=\"status\"\r\n                value={status} \r\n                onChange={(e) => setStatus(e.target.value)}\r\n                className=\"status-select\"\r\n              >\r\n                <option value=\"pending\">Pending</option>\r\n                <option value=\"completed\">Completed</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-actions\">\r\n              <button type=\"submit\" className=\"primary-button\" disabled={isLoading}>\r\n                {isLoading ? 'Saving...' : 'Save Task'}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"file-upload-section\">\r\n        <h3>Import Tasks</h3>\r\n        <form onSubmit={handleUpload} className=\"upload-form\">\r\n          <div className=\"file-input-container\">\r\n            <input \r\n              type=\"file\" \r\n              id=\"file-upload\"\r\n              onChange={(e) => setFile(e.target.files[0])} \r\n              className=\"file-input\"\r\n            />\r\n            <label htmlFor=\"file-upload\" className=\"file-label\">\r\n              {file ? file.name : 'Choose file'}\r\n            </label>\r\n          </div>\r\n          <button type=\"submit\" className=\"secondary-button\" disabled={!file || isLoading}>\r\n            {isLoading ? 'Uploading...' : 'Upload'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      <div className=\"task-filters\">\r\n        <button \r\n          className={`filter-button ${filter === 'all' ? 'active' : ''}`}\r\n          onClick={() => setFilter('all')}\r\n        >\r\n          All\r\n        </button>\r\n        <button \r\n          className={`filter-button ${filter === 'pending' ? 'active' : ''}`}\r\n          onClick={() => setFilter('pending')}\r\n        >\r\n          Pending\r\n        </button>\r\n        <button \r\n          className={`filter-button ${filter === 'completed' ? 'active' : ''}`}\r\n          onClick={() => setFilter('completed')}\r\n        >\r\n          Completed\r\n        </button>\r\n      </div>\r\n\r\n      {isLoading && !filteredTasks.length ? (\r\n        <div className=\"loading\">Loading tasks...</div>\r\n      ) : (\r\n        <div className=\"task-list\">\r\n          {filteredTasks.length === 0 ? (\r\n            <div className=\"empty-state\">\r\n              <p>No tasks found. Create a new task to get started!</p>\r\n            </div>\r\n          ) : (\r\n            filteredTasks.map((task) => (\r\n              <div key={task.id} className={`task-card ${task.status}`}>\r\n                <div className=\"task-content\">\r\n                  <h3 className=\"task-title\">{task.title}</h3>\r\n                  <p className=\"task-description\">{task.description}</p>\r\n                  <span className={`task-status ${task.status}`}>\r\n                    {task.status.charAt(0).toUpperCase() + task.status.slice(1)}\r\n                  </span>\r\n                </div>\r\n                <div className=\"task-actions\">\r\n                  <button \r\n                    onClick={() => handleUpdate(task.id, task.status)}\r\n                    className=\"action-button toggle\"\r\n                    title={task.status === 'pending' ? 'Mark as Completed' : 'Mark as Pending'}\r\n                  >\r\n                    <i className={task.status === 'pending' ? 'icon-check' : 'icon-refresh'}></i>\r\n                  </button>\r\n                  <button \r\n                    onClick={() => handleDelete(task.id)}\r\n                    className=\"action-button delete\"\r\n                    title=\"Delete Task\"\r\n                  >\r\n                    <i className=\"icon-trash\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}